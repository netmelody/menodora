<?xml version="1.0" encoding="utf-8" ?>
<project name="menodora" default="jar" basedir=".">

    <property name="target.version" value="0.0.6"/>
    <tstamp><format property="build.number" pattern="yyyyMMddHHmmss" timezone="GMT"/></tstamp>
    <tstamp><format property="build.timestamp" pattern="yyyy-MM-dd HH:mm:ss" timezone="GMT"/></tstamp>

    <target name="version-for-snapshot" unless="release.build">
        <property name="version.label" value="${target.version}-SNAPSHOT-${build.number}"/>
    </target>

    <target name="version-for-release" if="release.build">
        <property name="version.label" value="${target.version}"/>
    </target>

    <target name="version" depends="version-for-snapshot,version-for-release"/>

    <path id="project.compile.classpath">
        <fileset dir="vendor/lib" includes="**/*.jar"/>
    </path>

    <path id="project.build.classpath">
        <fileset dir="vendor/buildlib" includes="hamcrest*.jar"/>
    </path>

    <target name="compile" description="Compile java source to bytecode">
        <mkdir dir="build"/>
        <mkdir dir="build/main"/>
        <javac srcdir="src/main/java" includes="**" encoding="utf-8" destdir="build/main" source="1.5" target="1.5" debug="true" debuglevel="lines,source">
            <classpath refid="project.compile.classpath"/>
        </javac>
        
        <copy todir="build/main">
            <fileset dir="src/main/js"/>
        </copy>
    </target>

    <target name="test" depends="compile" description="Tests this project">
        <mkdir dir="build"/>
        <mkdir dir="build/test"/>
        <mkdir dir="build/doc"/>
        
        <copy todir="build/test">
            <fileset dir="src/test/resources/dummyproj/src/main/js"/>
            <fileset dir="src/test/resources/dummyproj/src/test/js"/>
            <fileset dir="src/test/resources/dummyproj2"/>
        </copy>
        
        <javac srcdir="src/test/resources/dummyproj/src/test/java" includes="**" encoding="utf-8" destdir="build/test" source="1.5" target="1.5" debug="true" debuglevel="lines,source">
            <classpath refid="project.compile.classpath"/>
            <classpath refid="project.build.classpath"/>
            <classpath><pathelement location="build/main"/></classpath>
        </javac>
        
        <javac srcdir="src/test/java" includes="**" encoding="utf-8" destdir="build/test" source="1.5" target="1.5" debug="true" debuglevel="lines,source">
            <classpath refid="project.compile.classpath"/>
            <classpath refid="project.build.classpath"/>
            <classpath><pathelement location="build/main"/></classpath>
        </javac>
        
        <junit printsummary="yes" haltonfailure="yes">
            <classpath refid="project.compile.classpath"/>
            <classpath refid="project.build.classpath"/>
            <classpath>
                <pathelement location="build/main"/>
                <pathelement location="build/test"/>
            </classpath>
          
            <formatter type="plain"/>
            <batchtest fork="yes" todir="build/doc">
                <fileset dir="src/test/java">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="clean" description="Cleans this project">
        <delete dir="build" failonerror="false" />
    </target>

    <target name="jar" depends="clean,compile,test,version" description="Create a jar file">
        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="vendor/buildlib/jarjar-1.1.jar"/>
        <jarjar destfile="build/menodora-${version.label}.jar">
            <fileset dir="build/main"/>
            <fileset dir="." includes="LICENSE NOTICE README"/>
            <zipfileset src="vendor/lib/commons-io-2.0.1.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/slf4j-api-1.6.4.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/guava-11.0.1.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/reflections-0.9.5.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/rhino-1.7R3-custom.jar" excludes="**/META-INF/**"/>
            <rule pattern="org.apache.**" result="org.netmelody.menodora.wrapped.@0"/>
            <rule pattern="org.mozilla.**" result="org.netmelody.menodora.wrapped.@0"/>
            <rule pattern="org.slf4j.**" result="org.netmelody.menodora.wrapped.@0"/>
            <rule pattern="com.google.**" result="org.netmelody.menodora.wrapped.@0"/>
            <rule pattern="org.reflections.**" result="org.netmelody.menodora.wrapped.@0"/>
            
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="netmelody.org"/>
                <attribute name="Implementation-Title" value="menodora"/>
                <attribute name="Implementation-Version" value="${version.label}"/>
                <attribute name="Built-Date" value="${build.timestamp}"/>
            </manifest>
        </jarjar>
    </target>

    <target name="release" description="Create a release jar file">
        <property name="release.build" value="true"/>
        <antcall target="jar"/>
    </target>
</project>
